/*
 * Copyright Â© 2019 <code@irradia.one> http://www.irradia.one
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
 * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

buildscript {
  if ("$gradle.gradleVersion" != "6.3") {
    throw new GradleException("Gradle version 6.3 is required (received $gradle.gradleVersion)")
  }

  ext.kotlin_version = "1.3.72"

  repositories {
    mavenCentral()
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:4.0.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "digital.wup:android-maven-publish:3.6.3"
    classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
    classpath "biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2"
  }
}

plugins {
  id "ru.vyarus.animalsniffer"             version "1.5.0"
  id "com.vanniktech.android.junit.jacoco" version "0.13.0"
  id "digital.wup.android-maven-publish"   version "3.6.2"
}

ext {
  androidBuildToolsVersion = "29.0.2"
  androidCompileSDKVersion = 28
  androidMinimumSDKVersion = 21
  androidTargetSDKVersion = 28

  if (!project.hasProperty("mavenCentralUsername")) {
    logger.warn("No mavenCentralUsername property specified: Using an empty value")
    mavenCentralUsername = ""
  }
  if (!project.hasProperty("mavenCentralPassword")) {
    logger.warn("No mavenCentralPassword property specified: Using an empty value")
    mavenCentralPassword = ""
  }

  if (project.hasProperty("one.irradia.directory.publish")) {
    useDirectoryPublishPath = project.property("one.irradia.directory.publish")
    useDirectoryPublish = true
    logger.warn("one.irradia.directory.publish is set: We will publish artifacts to ${useDirectoryPublishPath}")
  } else {
    logger.warn("one.irradia.directory.publish is not set: We will not publish artifacts to a custom directory")
    useDirectoryPublish = false
    useDirectoryPublishPath = null
  }
}

apply plugin: "com.vanniktech.android.junit.jacoco"

allprojects {
  group   = project.ext["GROUP"]
  version = project.ext["VERSION_NAME"]
}

subprojects { project ->

  switch (POM_PACKAGING) {
    case "jar":
      logger.info("Configuring ${project} (${POM_PACKAGING}) as jar project")

      apply plugin: "java"
      apply plugin: "java-library"
      apply plugin: "kotlin"

      /*
       * Apply the Animal Sniffer plugin to check that code is Android compatible.
       */

      apply plugin: "ru.vyarus.animalsniffer"

      dependencies {
        signature "org.codehaus.mojo.signature:java16:1.1@signature"
        signature "net.sf.androidscents.signature:android-api-level-14:4.0_r4@signature"
      }

      /*
       * Build an OSGi bundle.
       */

      apply plugin: "biz.aQute.bnd.builder"

      jar {
        bnd """
Automatic-Module-Name: ${POM_AUTOMATIC_MODULE_NAME}

-removeheaders: Bnd-LastModified, Tool, Private-Package
"""
      }
      break

    case "aar":
      logger.info("Configuring ${project} (${POM_PACKAGING}) as Android library project")

      apply plugin: "com.android.library"
      apply plugin: "kotlin-android"

      android {
        compileSdkVersion androidCompileSDKVersion
        buildToolsVersion androidBuildToolsVersion

        defaultConfig {
          minSdkVersion androidMinimumSDKVersion
          targetSdkVersion androidTargetSDKVersion
          testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_1_8
          targetCompatibility JavaVersion.VERSION_1_8
        }
        testOptions {
          execution "ANDROID_TEST_ORCHESTRATOR"
          animationsDisabled = true
        }
      }
      break

    default:
      throw new IllegalStateException(
        "Unrecognized packaging type ${POM_PACKAGING} for ${project}")
  }

  task javadocsJar(type: Jar) {
    classifier = "javadoc"
  }

  task sourcesJar(type: Jar) {
    classifier = "sources"
    from "src/main/java", "src/main/resources"
  }

  apply plugin: "digital.wup.android-maven-publish"
  apply plugin: "signing"

  publishing {
    publications {
      basicJar(MavenPublication) {

        switch (POM_PACKAGING) {
          case "jar":
            from components.java
            break

          case "aar":
            from components.android
            break
        }

        artifact sourcesJar
        artifact javadocsJar

        pom {
          artifactId  = POM_ARTIFACT_ID
          name        = POM_NAME
          packaging   = POM_PACKAGING
          description = POM_DESCRIPTION
          url         = POM_URL

          scm {
            connection          = POM_SCM_CONNECTION
            developerConnection = POM_SCM_DEV_CONNECTION
            url                 = POM_SCM_URL
          }

          licenses {
            license {
              name = POM_LICENCE_NAME
              url  = POM_LICENCE_URL
            }
          }

          developers {
            developer {
              id    = POM_DEVELOPER_ID
              name  = POM_DEVELOPER_NAME
              email = POM_DEVELOPER_EMAIL
              url   = POM_DEVELOPER_URL
            }
          }
        }
      }
    }

    repositories {
      if (useDirectoryPublish) {
        logger.info("using ${useDirectoryPublishPath} for publication")

        maven {
          name = "Directory"
          url = "file://${useDirectoryPublishPath}"
        }
      }

      maven {
        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
        url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        credentials(PasswordCredentials) {
          username mavenCentralUsername
          password mavenCentralPassword
        }
      }
    }
  }

  signing {
    useGpgCmd()
    sign publishing.publications.basicJar
  }

  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  configurations {
    dependencyOSGiBundleAnnotation
    dependencyKotlinReflect
    dependencyKotlinStdlib
    dependencyJUnit
    dependencyAndroidSupportTestRules
    dependencyAndroidSupportTestRunner
    dependencyAndroidTestOrchestrator
    dependencyJodaTime
    dependencyIrradiaMimeAPI
    dependencyIrradiaMimeImpl
    dependencyJackson
    dependencyGoogleGuava
    dependencySLF4J
    dependencyLogback
  }

  dependencies {
    dependencyOSGiBundleAnnotation     "org.osgi:org.osgi.annotation.bundle:1.0.0"
    dependencyKotlinReflect            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    dependencyKotlinStdlib             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    dependencyJUnit                    "junit:junit:4.12"
    dependencyAndroidSupportTestRules  "com.android.support.test:rules:1.0.2"
    dependencyAndroidSupportTestRunner "com.android.support.test:runner:1.0.2"
    dependencyAndroidTestOrchestrator  "com.android.support.test:orchestrator:1.0.2"
    dependencyJodaTime                 "joda-time:joda-time:2.10.6"
    dependencyIrradiaMimeAPI           "one.irradia.mime:one.irradia.mime.api:1.1.1"
    dependencyIrradiaMimeImpl          "one.irradia.mime:one.irradia.mime.vanilla:1.1.1"
    dependencyGoogleGuava              "com.google.guava:guava:27.1-android"
    dependencySLF4J                    "org.slf4j:slf4j-api:1.8.0-beta4"
    dependencyLogback                  "ch.qos.logback:logback-classic:1.3.0-alpha4"
    dependencyJackson                  "com.fasterxml.jackson.core:jackson-core:2.10.2"
  }
}

